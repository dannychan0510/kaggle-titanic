install.packages("KernSmooth")
library(KernSmooth)
x <- c(1,2,NA,4,BA,5)
x <- c(1,2,NA,4,NA,5)
y<-("a","b",NA,"d",NA,"f")
y<-c("a","b",NA,"d",NA,"f")
good <- complete.cases(x,y)
x[good]
x <- list(2,"a","b",TRUE)
x[[1]]
drop x
clear
a <- 1:4
b <- 2
a+b
q <- c(17, 14, 4, 5, 13, 12, 10)
q[q > 10] == 4
x[x >= 11] <- 4
q[q >= 11] <- 4
q
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
a <- gl(2,1,20)
a
b <- gl(2,8)
b
c<-gl(2,2,16)
c
x <- c(4, "a", TRUE)?
?
!
x <- c(4, "a", TRUE)
x <- c(4, "a", TRUE)
x <- list(2, "a", "b", TRUE)
x[[2]]
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <-10
f(3)
x <- 4L
display x
class x
class(x)
x <- c(4, "a", TRUE)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x[2]
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
display y
display(y)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
read.table("001")
read.table("001.txt")
read.table("001.csv")
read.table("/Users/dannychan0510/Google Drive/3. My Resources/Coursera/Data Science Specialization/2. R Programming/Week 2/Assignment/specdata/001.csv")
test <- read.table("/Users/dannychan0510/Google Drive/3. My Resources/Coursera/Data Science Specialization/2. R Programming/Week 2/Assignment/specdata")
test <- read.table("/Users/dannychan0510/Google Drive/3. My Resources/Coursera/Data Science Specialization/2. R Programming/Week 2/Assignment/specdata/001.csv")
View(test)
test <- read.csv("/Users/dannychan0510/Google Drive/3. My Resources/Coursera/Data Science Specialization/2. R Programming/Week 2/Assignment/specdata/001.csv")
View(test)
files = list.files(pattern="*.csv")
display(files)
test2 <- read.csv("/Users/dannychan0510/Google Drive/3. My Resources/Coursera/Data Science Specialization/2. R Programming/Week 2/Assignment/specdata/002.csv")
test3 <- rbind(test, test2)
View(test3)
View(test3)
View(test3)
install.packages("RMySQL")
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
library(MySQL)
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb)
result
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
oauth_endpoints("github")
library(httr)
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "b061a9b10fa6b4bf1a8a")
?oauth_app
myapp <- oauth_app("Data Science Specialization: Getting and Cleaning Data", "b061a9b10fa6b4bf1a8a")
myapp <- oauth_app("Data Science Specialization: Getting and Cleaning Data", "b061a9b10fa6b4bf1a8a", secret = "4b54071b19d312871928e58d99eb037935aef324")
github_token <- oauth2.0_token(oauth_endpoints("Data Science Specialization: Getting and Cleaning Data"), myapp)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", "56b637a5baffac62cad9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "b061a9b10fa6b4bf1a8a", "4b54071b19d312871928e58d99eb037935aef324")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("github", "b061a9b10fa6b4bf1a8a", "4b54071b19d312871928e58d99eb037935aef324")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/rate_limit", config(token = github_token))
stop_for_status(req)
myapp <- oauth_app("github", "b061a9b10fa6b4bf1a8a", "4b54071b19d312871928e58d99eb037935aef324")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
Cuwzq0r0github
myapp <- oauth_app("github", "b061a9b10fa6b4bf1a8a", "4b54071b19d312871928e58d99eb037935aef324")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/rate_limit", config(token = github_token))
stop_for_status(req)
myapp <- oauth_app("github", "b061a9b10fa6b4bf1a8a", "4b54071b19d312871928e58d99eb037935aef324")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
stop_for_status(req)
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
?oauth2.0_token
install.packages(c("jsonlite", "httpuv", "httr")
)
install.packages(c("jsonlite", "httpuv", "httr"))
library(c("jsonlite", "hyypuv", "httr"))
library("jsonlite")
library("httpuv")
library("httr")
library("jsonlite")
library("httpuv")
library("httr")
myapp <- oauth_app("coursera", "b061a9b10fa6b4bf1a8a", "4b54071b19d312871928e58d99eb037935aef324")
github_token <- oauth2.0_token(oauth_endpoints("coursera"), myapp)
req <- GET("https://api.github.com/rate_limit", config(token = github_token))
stop_for_status(req)
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
myapp <- oauth_app("coursera", "b061a9b10fa6b4bf1a8a", "4b54071b19d312871928e58d99eb037935aef324")
github_token <- oauth2.0_token(oauth_endpoints("coursera"), myapp)
req <- GET("https://api.github.com/rate_limit", config(token = github_token))
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
myapp <- oauth_app("coursera", "b061a9b10fa6b4bf1a8a", "4b54071b19d312871928e58d99eb037935aef324")
github_token <- oauth2.0_token(oauth_endpoints("coursera"), myapp)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
myapp <- oauth_app("coursera", "b061a9b10fa6b4bf1a8a", "4b54071b19d312871928e58d99eb037935aef324")
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
data <- structure(list(date = structure(c(16L, 1L, 6L, 11L, 17L, 2L,
7L, 12L, 18L, 3L, 8L, 13L, 19L, 4L, 9L, 14L, 20L, 5L, 10L, 15L,
21L), .Label = c("12/1/2009 0:00:00", "12/1/2010 0:00:00", "12/1/2011 0:00:00",
"12/1/2012 0:00:00", "12/1/2013 0:00:00", "3/1/2010 0:00:00",
"3/1/2011 0:00:00", "3/1/2012 0:00:00", "3/1/2013 0:00:00", "3/1/2014 0:00:00",
"5/31/2010 23:00:00", "5/31/2011 23:00:00", "5/31/2012 23:00:00",
"5/31/2013 23:00:00", "5/31/2014 23:00:00", "8/31/2009 23:00:00",
"8/31/2010 23:00:00", "8/31/2011 23:00:00", "8/31/2012 23:00:00",
"8/31/2013 23:00:00", "8/31/2014 23:00:00"), class = "factor"),
gdp = c(0.002000575, 0.003890642, 0.005088272, 0.009771946,
0.006467518, 0.000247441, 0.005362386, 0.002284132, 0.00696325,
-0.000147759, 0.000677327, -0.001779548, 0.008329224, -0.00337704,
0.005957449, 0.006427064, 0.0071664, 0.004061822, 0.006772674,
0.007517419, 0.006551699), unemp_rate = c(0, 0, 0.2, -0.1,
-0.1, 0.1, -0.1, 0.1, 0.4, 0.1, -0.2, -0.2, -0.1, -0.1, 0,
0, -0.2, -0.4, -0.4, -0.5, -0.3), cpi_index = c(0.006539081,
0.007278347, 0.007439852, 0.01287489, 0.002928654, 0.010128833,
0.014669842, 0.015393251, 0.006089083, 0.009548705, 0.003463403,
0.008184866, 0.002730592, 0.012079435, 0.004513875, 0.007228126,
0.003024506, 0.006102001, 0.000928235, 0.007057474, 0.000405809
), rpi_index = c(0.008466604, 0.011660448, 0.011065007, 0.019151847,
0.004474273, 0.011135857, 0.017180617, 0.017323517, 0.00553427,
0.010160881, 0.004191115, 0.010851419, 0.003715937, 0.011929247,
0.005691057, 0.009296686, 0.004805767, 0.006377043, 0.005544554,
0.008270973, 0.003515625), var1 = c(0.041601305, 0.012048193,
0.02875, 0.015448707, 0.016524217, -0.021860987, -0.008997135,
-0.003816573, 0.019330121, -0.010990888, -0.000230322, 0.012325059,
0.017636684, -0.006708783, -0.000787978, 0.018419422, 0.024889381,
0.011171074, 0.022735763, 0.039503209, 0.039508032), var2 = c(0.193230747,
0.022703903, -0.222946928, 0.13795924, 0.119414245, -0.098281638,
-0.104039862, 0.108217236, 0.191878865, -0.079442157, -0.091365159,
0.013284528, 0.07226117, -0.005000292, -0.137470909, 0.225735629,
0.189354653, 0.039039948, -0.085462281, 0.093873476, 0.085234886
), var3 = c(0.002260496, 0.003004489, 0.002789741, 0.000843318,
0.001498776, -0.002076772, 0.000737306, 0.001119267, 0.001567801,
0.002012014, 0.004426378, 0.010746497, 0.001646379, 0.000966773,
0.000978465, 0.001693297, 0.00216341, 0.004515371, 0.004334033,
0.004611893, 0.004022014), var4 = c(0.016428674, 0.015541372,
0.015225019, 0.003532365, 0.006978383, 0.013506623, 0.005057618,
0.00660319, 0.006242028, 0.010126316, 0.009523975, 0.013690636,
0.018186905, 0.01259537, 0.015526088, 0.014078954, 0.012134669,
0.011188655, 0.021969445, 0.015191039, 0.011791335)), .Names = c("date",
"gdp", "unemp_rate", "cpi_index", "rpi_index", "var1", "var2",
"var3", "var4"), class = "data.frame", row.names = c(NA, -21L
))
mycor <- cor(data[-1])
mycor <- round(mycor[5:8,1:4], 2)
mycor
install.packages("corrplot")
library(corrplot)
corrplot(mycor)
mycor <- cor(data[-1])
mycor
mycor <- cor(data[-1])
mycor <- round(mycor[5:7,1:4], 2)
mycor
corrplot(mycor)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?test
?text
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?splom
?trllis.par.set
?par
library(datasets)
data(airquality)
library(ggplot2)
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
library(ggplot2)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:ggplot2", unload=TRUE)
install.packages("colorspace")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
file.dest <- 'ACS4.csv'
download.file(file.url, file.dest, method='curl')
# load the data
ACS <- read.csv(file.dest)
# extract names
names <- names(ACS)
# string split
strsplit(names, 'wgtp')[123]
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='wget')
# read the data
GDP <- read.csv(file.dest, skip=4, nrows=190)
# substitute comma's out
GDPdol <- gsub(",", "", GDP$X.4)
# convert to integer and calculate mean
GDPdol <- as.integer(GDPdol)
mean(GDPdol, na.rm=TRUE)
# attach the GDP data frame
attach(GDP)
grep("^United",GDP$V4)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='wget')
# read the data
GDP <- read.csv(file.dest, skip=4, nrows=190)
# substitute comma's out
GDPdol <- gsub(",", "", GDP$X.4)
# convert to integer and calculate mean
GDPdol <- as.integer(GDPdol)
mean(GDPdol, na.rm=TRUE)
# attach the GDP data frame
attach(GDP)
grep("^United",GDP$V4)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='wget')
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='wget')
download.file(file.url, file.dest, method='curl')
GDP <- read.csv(file.dest, skip=4, nrows=190)
GDPdol <- gsub(",", "", GDP$X.4)
GDPdol <- as.integer(GDPdol)
mean(GDPdol, na.rm=TRUE)
attach(GDP)
grep("^United",GDP$V4)
attach(GDP)
grep("^United",GDP$V4)
grep("^United",GDP$V4)
View(GDP)
grep("^United",GDP$X.3)
grep("^United",GDP$X.3)
View(GDP)
?grep
grep("^United", GDP$X.3)
grepl("^United", GDP$X.3)
sum(grepl("^United", GDP$X.3))
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='curl')
GDP <- read.csv(file.dest, skip=4, nrows=190)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
file.dest <- 'edu.csv'
download.file(file.url, file.dest, method='wget')
edu <- read.csv(file.dest)
GDP <- read.csv(file.dest, skip=4, nrows=190)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='curl')
GDP <- read.csv(file.dest, skip=4, nrows=190)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
file.dest <- 'edu.csv'
download.file(file.url, file.dest, method='curl')
edu <- read.csv(file.dest)
merged <- merge(GDP, edu, by.x = 'X', by.y = 'CountryCode')
fy.june <- grep('Fiscal year end: June', merged$Special.Notes)
length(fy.june)
install.packages('quantmod')
library(quantmod)
# load Amazon stock data
amzn = getSymbols("AMZN",auto.assign=FALSE)
# extract the index
sampleTimes = index(amzn)
# create logical for year 2012
year2012 <- grepl('2012-*', sampleTimes)
# count 2012 observations (i.e. true)
table(year2012)
# subset based on 2012
sampleTimes2012 <- subset(sampleTimes, year2012)
# convert to day of week
day <- format(sampleTimes2012, '%A')
# count each day
table(day)
?qunif
qunif(0.75,0,1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
x*p
sum(x*p)
((0.75*0.3)/((0.75*0.3)+(0.48*0.7)))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x)
optimize( function(u){ sum(w*(x-u)^2) }, interval=c(-100,100))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
optimize(function(u){ sum(w*(x-u)^2)}, interval=c(-100,100))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
coeff(fit)
coefficients(fit)
> x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
> y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
> fit <- lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
coefficients(fit)
data(mtcars)
mtcars
fit <- lm(mpg ~ weight, data = mpf)
fit <- lm(mpg ~ weight, data = mpcars)
data <- data(mtcars)
dB <- data(mtcars)
data <- as.data.frame(data(mtcars))
data(mtcars)
dB <- as.data.frame(mtcars)
data(mtcars)
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ weight, data = dB)
View(dB)
fit <- lm(mpg ~ wt, data = dB)
coefficients(fit)
.5*.5
1.5*.4
1.5/.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x))/sd(x)
xn
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
coefficients(fit)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
?lm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x -1)
coefficients(fit)
corOfYandX <- 0.5
sdYoverX <- 2
beta1 <- corOfYandX*sdYoverX
beta1
setwd("~/Documents/GitHub/kaggle-titanic")
genderclassmodel <- read.csv("/data/genderclassmodel.csv")
genderclassmodel <- read.csv("~/data/genderclassmodel.csv")
genderclassmodel <- read.csv("~/Documents/GitHub/kaggle-titanic/genderclassmodel.csv")
genderclassmodel <- read.csv("~/Documents/GitHub/kaggle-titanic/Data/genderclassmodel.csv")
genderclassmodel <- read.csv("~/Data/genderclassmodel.csv")
gendermodel <- read.csv("~/Data/gendermodel.csv")
gendermodel <- read.csv("~/Documents/GitHub/kaggle-titanic/Data/gendermodel.csv")
test <- read.csv("~/Documents/GitHub/kaggle-titanic/Data/test.csv")
train <- read.csv("~/Documents/GitHub/kaggle-titanic/Data/train.csv")
str(train)
View(train)
test <- read.csv("~/Documents/GitHub/kaggle-titanic/Data/test.csv", stringsAsFactors = FALSE)
str(train)
table(train$survived)
table(train$Survived)
?proptable
?prop.table
prop.table(table(train$Survived))
View(test)
test$Survived <- rep(0, 418)
submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
write.csv(submit, file = "theyallperish.csv", row.names = FALSE)
